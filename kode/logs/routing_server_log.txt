==59136== Memcheck, a memory error detector
==59136== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59136== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==59136== Command: ./routing_server 2020 8
==59136== 
==59136== Conditional jump or move depends on uninitialised value(s)
==59136==    at 0x401223: printAllNodeSockets (routing_server.c:349)
==59136==    by 0x400DE3: initializeTCPServer (routing_server.c:237)
==59136==    by 0x4009B0: main (routing_server.c:48)
==59136== 
Hello I'm routing_server.c 3All Arguments.
argv[0] : -16776813 
argv[1] : -16776796 
argv[2] : -16776791 
bind() called.
listen() called.
N = 8,   nodeConnectionsCountSoFar = 0
accept() called!
A TCP-client connected!!
 client_socket_id = 4 
2048 bytes Recieved!! : Recieved message from socket: 4   message:
amountOfEdgeWeights 2 
nodeID[1] has Edge/weight;  to:  11     weight:    2 
nodeID[1] has Edge/weight;  to:  103     weight:    6 
N = 8,   nodeConnectionsCountSoFar = 1
accept() called!
A TCP-client connected!!
 client_socket_id = 5 
2048 bytes Recieved!! : Recieved message from socket: 5   message:k
amountOfEdgeWeights 3 
nodeID[107] has Edge/weight;  to:  17     weight:    2 
nodeID[107] has Edge/weight;  to:  101     weight:    2 
nodeID[107] has Edge/weight;  to:  103     weight:    4 
N = 8,   nodeConnectionsCountSoFar = 2
accept() called!
A TCP-client connected!!
 client_socket_id = 6 
2048 bytes Recieved!! : Recieved message from socket: 6   message:
amountOfEdgeWeights 3 
nodeID[11] has Edge/weight;  to:  1     weight:    2 
nodeID[11] has Edge/weight;  to:  13     weight:    7 
nodeID[11] has Edge/weight;  to:  19     weight:    2 
N = 8,   nodeConnectionsCountSoFar = 3
accept() called!
A TCP-client connected!!
 client_socket_id = 7 
2048 bytes Recieved!! : Recieved message from socket: 7   message:
amountOfEdgeWeights 2 
nodeID[17] has Edge/weight;  to:  13     weight:    3 
nodeID[17] has Edge/weight;  to:  107     weight:    2 
N = 8,   nodeConnectionsCountSoFar = 4
accept() called!
A TCP-client connected!!
 client_socket_id = 8 
2048 bytes Recieved!! : Recieved message from socket: 8   message:
amountOfEdgeWeights 3 
nodeID[13] has Edge/weight;  to:  11     weight:    7 
nodeID[13] has Edge/weight;  to:  17     weight:    3 
nodeID[13] has Edge/weight;  to:  101     weight:    4 
N = 8,   nodeConnectionsCountSoFar = 5
accept() called!
A TCP-client connected!!
 client_socket_id = 9 
2048 bytes Recieved!! : Recieved message from socket: 9   message:
amountOfEdgeWeights 3 
nodeID[19] has Edge/weight;  to:  11     weight:    2 
nodeID[19] has Edge/weight;  to:  101     weight:    2 
nodeID[19] has Edge/weight;  to:  103     weight:    1 
N = 8,   nodeConnectionsCountSoFar = 6
accept() called!
A TCP-client connected!!
 client_socket_id = 10 
2048 bytes Recieved!! : Recieved message from socket: 10   message:e
amountOfEdgeWeights 3 
nodeID[101] has Edge/weight;  to:  13     weight:    4 
nodeID[101] has Edge/weight;  to:  19     weight:    2 
nodeID[101] has Edge/weight;  to:  107     weight:    2 
N = 8,   nodeConnectionsCountSoFar = 7
accept() called!
A TCP-client connected!!
 client_socket_id = 11 
2048 bytes Recieved!! : Recieved message from socket: 11   message:g
amountOfEdgeWeights 3 
nodeID[103] has Edge/weight;  to:  1     weight:    6 
nodeID[103] has Edge/weight;  to:  19     weight:    1 
nodeID[103] has Edge/weight;  to:  107     weight:    4 
All nodes currently in system: 

NodeID   : 1 
SocketID : 4 

 All neighbours
From: 1  to: 11  weight: 2
From: 1  to: 103  weight: 6

print Path: 



NodeID   : 107 
SocketID : 5 

 All neighbours
From: 107  to: 17  weight: 2
From: 107  to: 101  weight: 2
From: 107  to: 103  weight: 4

print Path: 



NodeID   : 11 
SocketID : 6 

 All neighbours
From: 11  to: 1  weight: 2
From: 11  to: 13  weight: 7
From: 11  to: 19  weight: 2

print Path: 



NodeID   : 17 
SocketID : 7 

 All neighbours
From: 17  to: 13  weight: 3
From: 17  to: 107  weight: 2

print Path: 



NodeID   : 13 
SocketID : 8 

 All neighbours
From: 13  to: 11  weight: 7
From: 13  to: 17  weight: 3
From: 13  to: 101  weight: 4

print Path: 



NodeID   : 19 
SocketID : 9 

 All neighbours
From: 19  to: 11  weight: 2
From: 19  to: 101  weight: 2
From: 19  to: 103  weight: 1

print Path: 



NodeID   : 101 
SocketID : 10 

 All neighbours
From: 101  to: 13  weight: 4
From: 101  to: 19  weight: 2
From: 101  to: 107  weight: 2

print Path: 



NodeID   : 103 
SocketID : 11 

 All neighbours
From: 103  to: 1  weight: 6
From: 103  to: 19  weight: 1
From: 103  to: 107  weight: 4

print Path: 


All Edges / Weights 
 (nodeID)  ---- weight --->  (nodeTargetID)  
 (1)  ----- 2 ------>  (11)  
 (1)  ----- 6 ------>  (103)  
 (107)  ----- 2 ------>  (17)  
 (107)  ----- 2 ------>  (101)  
 (107)  ----- 4 ------>  (103)  
 (11)  ----- 2 ------>  (1)  
 (11)  ----- 7 ------>  (13)  
 (11)  ----- 2 ------>  (19)  
 (17)  ----- 3 ------>  (13)  
 (17)  ----- 2 ------>  (107)  
 (13)  ----- 7 ------>  (11)  
 (13)  ----- 3 ------>  (17)  
 (13)  ----- 4 ------>  (101)  
 (19)  ----- 2 ------>  (11)  
 (19)  ----- 2 ------>  (101)  
 (19)  ----- 1 ------>  (103)  
 (101)  ----- 4 ------>  (13)  
 (101)  ----- 2 ------>  (19)  
 (101)  ----- 2 ------>  (107)  
 (103)  ----- 6 ------>  (1)  
 (103)  ----- 1 ------>  (19)  
 (103)  ----- 4 ------>  (107)  
Allocating memory for storing Paths in each NodeSocket.







Dijkstra has started!!

startNode: 1     startNodeINdex : 0 

isArrayEmpty  -1 
MinDistFound at index: 0    dist: 0isArrayEmpty  -1 
MinDistFound at index: 2    dist: 2isArrayEmpty  -1 
MinDistFound at index: 5    dist: 4isArrayEmpty  -1 
MinDistFound at index: 7    dist: 5isArrayEmpty  -1 
MinDistFound at index: 6    dist: 6isArrayEmpty  -1 
MinDistFound at index: 1    dist: 8isArrayEmpty  -1 
MinDistFound at index: 4    dist: 9isArrayEmpty  -1 
MinDistFound at index: 3    dist: 10
NodeID   : 1 
SocketID : 4 

 All neighbours
From: 1  to: 11  weight: 2
From: 1  to: 103  weight: 6

print Path: 



NodeID   : 107 
SocketID : 5 

 All neighbours
From: 107  to: 17  weight: 2
From: 107  to: 101  weight: 2
From: 107  to: 103  weight: 4

print Path: 
11 19 101 107 


NodeID   : 11 
SocketID : 6 

 All neighbours
From: 11  to: 1  weight: 2
From: 11  to: 13  weight: 7
From: 11  to: 19  weight: 2

print Path: 
11 


NodeID   : 17 
SocketID : 7 

 All neighbours
From: 17  to: 13  weight: 3
From: 17  to: 107  weight: 2

print Path: 
11 19 101 107 17 


NodeID   : 13 
SocketID : 8 

 All neighbours
From: 13  to: 11  weight: 7
From: 13  to: 17  weight: 3
From: 13  to: 101  weight: 4

print Path: 
11 13 


NodeID   : 19 
SocketID : 9 

 All neighbours
From: 19  to: 11  weight: 2
From: 19  to: 101  weight: 2
From: 19  to: 103  weight: 1

print Path: 
11 19 


NodeID   : 101 
SocketID : 10 

 All neighbours
From: 101  to: 13  weight: 4
From: 101  to: 19  weight: 2
From: 101  to: 107  weight: 2

print Path: 
11 19 101 


NodeID   : 103 
SocketID : 11 

 All neighbours
From: 103  to: 1  weight: 6
From: 103  to: 19  weight: 1
From: 103  to: 107  weight: 4

print Path: 
11 19 103 

MATCH FOUND 107 , 107 MATCH FOUND 107 , 107 MATCH FOUND 11 , 11 MATCH FOUND 11 , 11 MATCH FOUND 11 , 11 MATCH FOUND 11 , 11 MATCH FOUND 11 , 11 MATCH FOUND 11 , 11 MATCH FOUND 11 , 11 MATCH FOUND 17 , 17 MATCH FOUND 13 , 13 MATCH FOUND 19 , 19 MATCH FOUND 19 , 19 MATCH FOUND 19 , 19 MATCH FOUND 19 , 19 MATCH FOUND 19 , 19 MATCH FOUND 101 , 101 MATCH FOUND 101 , 101 MATCH FOUND 101 , 101 MATCH FOUND 103 , 103 nodeId: 1 -> [1] = -1
nodeId: 1 -> [107] = -1
nodeId: 1 -> [11] = -1
nodeId: 1 -> [17] = -1
nodeId: 1 -> [13] = -1
nodeId: 1 -> [19] = -1
nodeId: 1 -> [101] = -1
nodeId: 1 -> [103] = -1
nodeId: 107 -> [1] = -1
nodeId: 107 -> [107] = -1
nodeId: 107 -> [11] = -1
nodeId: 107 -> [17] = 17
nodeId: 107 -> [13] = -1
nodeId: 107 -> [19] = -1
nodeId: 107 -> [101] = -1
nodeId: 107 -> [103] = -1
nodeId: 11 -> [1] = -1
nodeId: 11 -> [107] = 19
nodeId: 11 -> [11] = -1
nodeId: 11 -> [17] = 19
nodeId: 11 -> [13] = 13
nodeId: 11 -> [19] = 19
nodeId: 11 -> [101] = 19
nodeId: 11 -> [103] = 19
nodeId: 17 -> [1] = -1
nodeId: 17 -> [107] = -1
nodeId: 17 -> [11] = -1
nodeId: 17 -> [17] = -1
nodeId: 17 -> [13] = -1
nodeId: 17 -> [19] = -1
nodeId: 17 -> [101] = -1
nodeId: 17 -> [103] = -1
nodeId: 13 -> [1] = -1
nodeId: 13 -> [107] = -1
nodeId: 13 -> [11] = -1
nodeId: 13 -> [17] = -1
nodeId: 13 -> [13] = -1
nodeId: 13 -> [19] = -1
nodeId: 13 -> [101] = -1
nodeId: 13 -> [103] = -1
nodeId: 19 -> [1] = -1
nodeId: 19 -> [107] = 101
nodeId: 19 -> [11] = -1
nodeId: 19 -> [17] = 101
nodeId: 19 -> [13] = -1
nodeId: 19 -> [19] = -1
nodeId: 19 -> [101] = 101
nodeId: 19 -> [103] = 103==59136== Invalid free() / delete / delete[] / realloc()
==59136==    at 0x4C2ACBD: free (vg_replace_malloc.c:530)
==59136==    by 0x400FFE: freeAllMemory (routing_server.c:321)
==59136==    by 0x400F7A: initializeTCPServer (routing_server.c:290)
==59136==    by 0x4009B0: main (routing_server.c:48)
==59136==  Address 0x5203f60 is 0 bytes inside a block of size 32 free'd
==59136==    at 0x4C2ACBD: free (vg_replace_malloc.c:530)
==59136==    by 0x400FFE: freeAllMemory (routing_server.c:321)
==59136==    by 0x400F7A: initializeTCPServer (routing_server.c:290)
==59136==    by 0x4009B0: main (routing_server.c:48)
==59136==  Block was alloc'd at
==59136==    at 0x4C29BC3: malloc (vg_replace_malloc.c:299)
==59136==    by 0x400E40: initializeTCPServer (routing_server.c:257)
==59136==    by 0x4009B0: main (routing_server.c:48)
==59136== 
==59136== Invalid free() / delete / delete[] / realloc()
==59136==    at 0x4C2ACBD: free (vg_replace_malloc.c:530)
==59136==    by 0x401021: freeAllMemory (routing_server.c:322)
==59136==    by 0x400F7A: initializeTCPServer (routing_server.c:290)
==59136==    by 0x4009B0: main (routing_server.c:48)
==59136==  Address 0x5204260 is 0 bytes inside a block of size 32 free'd
==59136==    at 0x4C2ACBD: free (vg_replace_malloc.c:530)
==59136==    by 0x401021: freeAllMemory (routing_server.c:322)
==59136==    by 0x400F7A: initializeTCPServer (routing_server.c:290)
==59136==    by 0x4009B0: main (routing_server.c:48)
==59136==  Block was alloc'd at
==59136==    at 0x4C29BC3: malloc (vg_replace_malloc.c:299)
==59136==    by 0x401932: calculateRoutingTableForAllNodeSockets (routing_server.c:539)
==59136==    by 0x400ECA: initializeTCPServer (routing_server.c:279)
==59136==    by 0x4009B0: main (routing_server.c:48)
==59136== 

nodeId: 101 -> [1] = -1
nodeId: 101 -> [107] = 107
nodeId: 101 -> [11] = -1
nodeId: 101 -> [17] = 107
nodeId: 101 -> [13] = -1
nodeId: 101 -> [19] = -1
nodeId: 101 -> [101] = -1
nodeId: 101 -> [103] = -1
nodeId: 103 -> [1] = -1
nodeId: 103 -> [107] = -1
nodeId: 103 -> [11] = -1
nodeId: 103 -> [17] = -1
nodeId: 103 -> [13] = -1
nodeId: 103 -> [19] = -1
nodeId: 103 -> [101] = -1
nodeId: 103 -> [103] = -1
==59136== 
==59136== HEAP SUMMARY:
==59136==     in use at exit: 176 bytes in 8 blocks
==59136==   total heap usage: 55 allocs, 75 frees, 1,512 bytes allocated
==59136== 
==59136== LEAK SUMMARY:
==59136==    definitely lost: 176 bytes in 8 blocks
==59136==    indirectly lost: 0 bytes in 0 blocks
==59136==      possibly lost: 0 bytes in 0 blocks
==59136==    still reachable: 0 bytes in 0 blocks
==59136==         suppressed: 0 bytes in 0 blocks
==59136== Rerun with --leak-check=full to see details of leaked memory
==59136== 
==59136== For counts of detected and suppressed errors, rerun with: -v
==59136== Use --track-origins=yes to see where uninitialised values come from
==59136== ERROR SUMMARY: 36 errors from 3 contexts (suppressed: 0 from 0)
